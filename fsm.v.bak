module fsm
(
	input [9:9]SW,
	input [1:0]KEY,
	output wire [1:0] LEDG, LEDR
);

parameter s0 = 3'b00, s1 = 3'b001, s2 = 3'b010, s3 = 3'b011, s4 = 3'b100;
parameter G = 2'b00, Y = 2'b01, R = 2'b10; 
reg [1:0]state, n_state, hwy, cntry;

assign LEDG = hwy;
assign LEDR = cntry;

always@(posedge KEY[1], negedge KEY[0])
	if(!KEY[0])
		state <= s0;
	else
		state <= n_state;
		

always@(state, SW)
begin
	case(state)
	s0: if(SW)
			n_state = s1;
		else
			n_state = s0;
	s1:	n_state = s2;
	s2: n_state = s3;
	s3: if(SW)
			n_state = s3;
		else
			n_state = s4;
	s4: n_state = s0;
	default: n_state = s0;
	endcase
end

always@(state)
begin
	case(state)
	s0: begin
		hwy = G;
		cntry = R;
		end
	s1: begin
		hwy = G;
		cntry = R;
		end
	s2: begin
		hwy = G;
		cntry = R;
		end
	s3: begin
		hwy = G;
		cntry = R;
		end
	s4: begin
		hwy = G;
		cntry = R;
		end
	endcase
end
endmodule
